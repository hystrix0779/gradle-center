plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.4.RELEASE' apply false
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}
ext {
    gradleScriptDir = "${rootProject.projectDir}/gradle"
    projectBuildDir = "${rootProject.projectDir}/build"


    springBootVersion = '2.3.4.RELEASE'

    fastjsonVersion = '1.2.74'
    commonModel = '0.0.1'
    swagger2 = '2.9.2'
    springDataJpa = '2.3.4.RELEASE'
    mybatis = '1.3.2'
    pagehelper = '1.2.10'
    mysql = '5.1.32'
}
group = project.group
subprojects {
    apply plugin: 'java' /* java是Gradle的核心插件，是内置的，内置插件不需要配置依赖路径 */
    apply plugin: 'idea' /* 同上  让Gradle自动生成Intellij的项目文件*/
    apply plugin: 'eclipse'
    /* 注意gradle插件不再自动应用，所以这里需要指定 */
    apply plugin: 'org.springframework.boot'
    /* 依赖管理插件仍然是一个spring-boot-gradle-plugin传递依赖，所以无需在build.gradle配置中明确列出此依赖。 */
    apply plugin: 'io.spring.dependency-management' /* 依赖管理，用来传递spring的依赖 */

    group = project.group
    version = project.version
    artifactId = project.artifactId

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenLocal()
        maven { url "http://10.0.1.110:8085/nexus/content/repositories/releases" }
        mavenCentral()
    }

    /* 添加通用依赖 */
    dependencies {
        annotationProcessor "org.projectlombok:lombok"
        compileOnly "org.projectlombok:lombok"
        implementation "com.base.common:common-model:${commonModel}"
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compile "com.alibaba:fastjson:${fastjsonVersion}"
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
        dependencies {
            dependency "io.springfox:springfox-swagger2:${swagger2}"
            dependency "io.springfox:springfox-swagger-ui:${swagger2}"
            dependency "org.springframework.boot:spring-boot-starter-data-jpa:${springDataJpa}"

            dependency "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatis}"
            dependency "com.github.pagehelper:pagehelper-spring-boot-starter:${pagehelper}"
            dependency "mysql:mysql-connector-java:${mysql}"

        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }
    test {
        reports {
            junitXml.enabled = true
            html.enabled = false
        }
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    shadowJar {
        // 生成包的命名规则： baseName-version-classifier.jar
        manifest {
            attributes(
                    'Main-Class': 'com.nlx.center.web.CenterApplication'
            )
        }
        from("./"){
            include 'build.gradle'
        }
    }
}
